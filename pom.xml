<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>jsonl-viewer</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <javafx.version>17.0.2</javafx.version>
        <jackson.version>2.18.3</jackson.version>
        <mainClass>app.MainApp</mainClass>
    </properties>

    <dependencies>
        <!-- JavaFX modules -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- Jackson for streaming JSON parsing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- JsonPath for filtering -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.9.0</version>
        </dependency>

        <!-- ByteBuddy for trace processing -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.14.10</version>
        </dependency>
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>1.14.10</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                    <modules>
                        <module>javafx.controls</module>
                    </modules>
                </configuration>
            </plugin>

            <!-- Copy libraries for local execution -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope> <!-- or compile/test/compile+runtime -->
                            <stripVersion>false</stripVersion>   <!-- true to remove version from filename -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- TRACE AGENT -->
            <!-- Build agent JAR from src/agent/java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-agent</id>
                        <phase>package</phase>
                        <goals><goal>jar</goal></goals>
                        <configuration>
                            <classifier>agent</classifier>
                            <classesDirectory>${project.build.directory}/agent-classes</classesDirectory>
                            <archive>
                                <manifestEntries>
                                <Premain-Class>traceagent.TraceAgent</Premain-Class>
                                </manifestEntries>
                            </archive>
                            <!-- <finalName>trace-agent</finalName> -->
                        </configuration>
                    </execution>
<!--
                    <execution>
                        <id>build-app</id>
                        <goals><goal>jar</goal></goals>
                        <configuration>
                            <classifier>main-app</classifier>
                            <archive>
                                <manifest>
                                    <mainClass>your.app.Main</mainClass>
                                </manifest>
                            </archive>
                            <finalName>main-app</finalName>
                        </configuration>
                    </execution>
-->
                </executions>
            </plugin>

            <!-- Compile alternate source directory -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile-agent</id>
                        <phase>compile</phase>
                        <goals><goal>compile</goal></goals>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <compilerArgs>
                                <arg>-parameters</arg>
                            </compilerArgs>
                            <compileSourceRoots>
                                <compileSourceRoot>${project.basedir}/src/agent/java</compileSourceRoot>
                            </compileSourceRoots>
                            <outputDirectory>${project.build.directory}/agent-classes</outputDirectory>
                        </configuration>
                    </execution>
<!--
                    <execution>
                        <id>compile-main</id>
                        <goals><goal>compile</goal></goals>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <compilerArgs>
                                <arg>-parameters</arg>
                            </compilerArgs>
                            <compileSourceRoots>
                                <compileSourceRoot>${project.basedir}/src/main/java</compileSourceRoot>
                            </compileSourceRoots>
                        </configuration>
                    </execution>
-->
                </executions>
            </plugin>
            <!-- BUILD PACKAGE -->
            <!-- 1. prepare script -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>filter-and-rename-launch-script</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <!-- Copy and filter launch.sh.in to launch.sh -->
                                <copy file="src/main/scripts/launch.sh.in" tofile="${project.build.directory}/filtered-scripts/jsonl-view.sh">
                                    <filterset>
                                        <filter token="mainClass" value="${mainClass}"/>
                                    </filterset>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 2. Create a distribution package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>app.MainApp</mainClass>
                        </manifest>
                    </archive>
                    <!-- <descriptorRefs>
                        <descriptorRef>bin</descriptorRef>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs> -->
                    <finalName>${project.artifactId}-${project.version}</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/assembly/distribution.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
